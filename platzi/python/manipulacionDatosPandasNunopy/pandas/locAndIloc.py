# -*- coding: utf-8 -*-
"""pandasCvsJsonRead.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M5MPX-EEsY4fbdrcKebmckM0zgbBP6VZ
"""

import pandas as pd

pd.read_csv('/content/bestsellers-with-categories_e591527f-ae45-4fa5-b0d1-d50142128fa6.csv')

from google.colab import drive
drive.mount('/content/drive')

"""pd.read_csv('/content/ bestsellers-with-categories_e591527f-ae45-4fa5-b0d1-d50142128fa6.csv', sep="|", head=None) atributo sep en caso de que venga separado el csv por | u otro por defect es como, y head por si no tiene cabecera, None podra cabeceras numericas desde 0 asc o podemos entregar una lista con los nombre de la cabeceras que deseemos

"""

pd.read_json('/content/hpcharactersdataraw.json', typ='series')

"""En el caso de los Json las claves pasan a ser cabeceras, con typ='Series' cargara la data en una lsita en formato raw {llave, valor}"""

df_book = pd.read_csv('/content/bestsellers-with-categories_e591527f-ae45-4fa5-b0d1-d50142128fa6.csv')

df_book[0:4]

"""Puedo usar los slice propios de Numpy para obetener una porsión de los resultads"""

df_book['Name']

"""Puedo filtrar por columna, una columna me devuelve un Pandas Series"""

df_book[['Name','Author','Year']]

"""También utilizando doble corchetes puedo filttar por multiples columnas"""

df_book.loc[:]

df_book.loc[0:4]

"""Al hacer slice con la propiedad loc considera dentro de la consulte el numero limite que le hemos puesto, a diferencia de slice normal que numero final no es considerado y devuelve el fina -1"""

df_book.loc[0:4, ['Name', 'Author']]

"""Se puede mezclar las opciones de consulta"""

df_book.loc[:, ['Year']]

df_book.loc[0:5, ['Year']] * -1

"""Se puede realizar operaciones con los resultados de las consultas"""

df_book.loc[: ,['Author']] == 'JJ Smith'

"""##iloc

iloc permite localizar por indice tanto en filas como en columnas ilo[slice filas, slice columnas]
"""

df_book.iloc[0:5, 0:3]

"""Tambien buscar por coordenadas"""

df_book.iloc[1,3]

df_book.iloc[1,2] * -1

df_book.iloc[:2,2:]

